
  
name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Run lint test
        run:  echo Run lint test
      #   run:  ./gradlew lint #./gradlew lintDebug --stacktrace
      #   continue-on-error: true

      # - name: Upload test report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: lint.html
      #     path: app/build/reports/lint-results.html #*.html /lint-results-debug.html

  unit-test:
    needs: [lint-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Run unit tests
        run: echo Run unit tests
      #   run: ./gradlew test #bash ./gradlew test --stacktrace 

      # - name: Upload test report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: unit_test_report
      #     path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
    needs: [unit-test]
    runs-on: macos-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Run espresso tests
        run: echo Run espresso tests
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: 29
      #     script: ./gradlew connectedCheck

      # - name: Upload test report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: instrumentation_test_report
      #     path: app/build/reports/androidTests/connected/

  static-code-analysis:
    needs: [instrumentation-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: SonarCloud Scan
        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }} #-Pandroid.debug.obsoleteApi=true --stacktrace --debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

  package:
    needs: [static-code-analysis]
    # name: package-apk-file
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # - name: "Validate Gradle wrapper"
      #   uses: gradle/wrapper-validation-action@v1

      - name: Build debug APK
        run: ./gradlew clean assembleDebug
        continue-on-error: true

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: expense-manager.apk
          path: app/build/outputs/apk/debug/app-debug.apk

  deploy-to-appcenter:
    needs: [package]
    # name: deploy-to-appcenter
    runs-on: ubuntu-latest
    steps:
      - name: Download latest artifact
        uses: actions/download-artifact@v3
        with:
          name: expense-manager.apk

      - name: Upload to app center
        run: echo  Upload to app center
        continue-on-error: true
        # uses: wzieba/AppCenter-Github-Action@v1
        # with:
        #   appName: opeomotayo/expense-manager-android-app
        #   token:  ${{ secrets.APP_CENTER_TOKEN }}
        #   group: AlphaTesters
        #   file: expense-manager.apk
        #   notifyTesters: true
        #   debug: true

  deploy-to-nexus:
    needs: [package]
    # name: deploy-to-nexus
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build with Maven
        run: Build with Maven
      #   run: mvn package --file pom.xml #mvn -B package --file pom.xml  
      # - name: Nexus Repo Publish
      #   uses: sonatype-nexus-community/nexus-repo-github-action@master
      #   with:
      #     serverUrl: http://163c6cdd.ngrok.io
      #     username: admin
      #     password: ${{ secrets.password }}
      #     format: maven2
      #     repository: maven-releases
      #     coordinates: groupId=com.example artifactId=app version=1.0.0
      #     assets: extension=jar
      #     filename: ./target/app-1.0.0.jar
        
  # release-app:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2
  #     - name: Setup Java 11
  #       uses: actions/setup-java@v2
  #       with:
  #         distribution: 'adopt'
  #         java-version: 11
  #     - name: "Validate Gradle wrapper"
  #       uses: gradle/wrapper-validation-action@v1
  #     - name: Generate Release AAB
  #       run: ./gradlew bundleRelease
  #     - name: Sign Android release
  #       uses: r0adkll/sign-android-release@v1
  #       with:
  #         releaseDirectory: app/build/outputs/bundle/release
  #         signingKeyBase64: ${{ secrets.SIGNING_KEY }}
  #         alias: ${{ secrets.ALIAS }}
  #         keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
  #         keyPassword: ${{ secrets.KEY_PASSWORD }}
  #     - name: Upload Release AAB to GitHub
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Release AAB
  #         path: app/build/outputs/bundle/release/app-release.aab
  #     - name: Upload Release AAB to Play Store
  #       uses: r0adkll/upload-google-play@v1
  #       with:
  #         serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
  #         packageName: # TODO put your package name here
  #         releaseFiles: app/build/outputs/bundle/release/app-release.aab
  #         track: # TODO specify track here